@page "/edit-user/{id:int}"

<h3>Edit User</h3>

<div>
    <button class="btn btn-secondary" @onclick="Back">Back</button>
</div>
<div>
    <EditForm class="form-container" Model="@Model" OnValidSubmit="@SubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <label for="Name">Name</label>
        <InputText @bind-Value="Model!.Name" />
        <label for="Name">Surname</label>
        <InputText @bind-Value="Model!.Surname" />
        <label for="Name">Email</label>
        <InputText type="email" @bind-Value="Model!.Email" />
        <label for="Name">BirthDate</label>
        <InputDate @bind-Value="Model!.BirthDate" />

        <button class="btn btn-primary" type="submit">Update</button>
    </EditForm>
</div>



@code {

    [Inject]
    private NavigationManager Navigation { get; set; }

    [Inject]
    private HttpClient ApiClient { get; set; }

    [Parameter]
    public int Id { get; set; }

    private UpdateUserDto Model = new UpdateUserDto();


    protected async override Task OnInitializedAsync()
    {
        var user = await ApiClient.GetFromJsonAsync<UserDto>($"users/{Id}");

        Model = new UpdateUserDto
            {
                Id = user.Id,
                Name = user.Name,
                Surname = user.Surname,
                Email = user.Email,
                BirthDate = user.BirthDate
            };
    }

    private async Task SubmitAsync()
    {
        await ApiClient.PutAsJsonAsync<UpdateUserDto>("users", Model);

        Back();
    }

    private void Back()
    {
        Navigation.NavigateTo("users");
    }

}
